#text_indentation.txt

#Imported module for function usage on test cases
>>> text_indentation = __import__('5-text_indentation').text_indentation

# Test case 1: Basic usage of text_indentation
>>> text_indentation("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres")
Lorem ipsum dolor sit amet, consectetur adipiscing elit.
<BLANKLINE>
Quonam modo?
<BLANKLINE>
Utrum igitur tibi litteram videor an totas paginas commovere?
<BLANKLINE>
Non autem hoc:
<BLANKLINE>
igitur ne illud quidem.
<BLANKLINE>
Fortasse id optimum, sed ubi illud:
<BLANKLINE>
Plus semper voluptatis?
<BLANKLINE>
Teneo, inquit, finem illi videri nihil dolere.
<BLANKLINE>
Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
<BLANKLINE>
Si id dicis, vicimus.
<BLANKLINE>
Inde sermone vario sex illa a Dipylo stadia confecimus.
<BLANKLINE>
Sin aliud quid voles, postea.
<BLANKLINE>
Quae animi affectio suum cuique tribuens atque hanc, quam dico.
<BLANKLINE>
Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

# Test case 2: multi space at end of .,?
>>> text_indentation("This is.    for.   the, test?        did it work!")
This is.
<BLANKLINE>
for.
<BLANKLINE>
the, test?
<BLANKLINE>
did it work!

# Test case 3: when text is not a string
>>> text_indentation(123)
Traceback (most recent call last):
    ...
TypeError: text must be a string

# Test case 4: when arg is None
>>> text_indentation(None)
Traceback (most recent call last):
    ...
TypeError: text must be a string

# Test case 5: when arg is a list of strings
>>> text_indentation(["text", "is", "list"])
Traceback (most recent call last):
    ...
TypeError: text must be a string

# Test case 6: when arg is tuple of strings
>>> text_indentation(("Text", "in", "tuple"))
Traceback (most recent call last):
    ...
TypeError: text must be a string

# Test case 7: function called with no arguments
>>> text_indentation()
Traceback (most recent call last):
    ...
TypeError: text_indentation() missing 1 required positional argument: 'text'

# Test case 8: args with single world
>>> text_indentation("Hello")
Hello

# Test case 9: arg with multiple-spaces at end
>>> text_indentation("above      readme     : readme? Under    Read me         ")
above      readme     :
<BLANKLINE>
readme?
<BLANKLINE>
Under    Read me

# Test case 10: empty text given
>>> text_indentation("")
<BLANKLINE>

# Test case 11: float number given
>>> text_indentation(3.14)
Traceback (most recent call last):
    ...
TypeError: text must be a string

# Test case 12: text with only whitelines
>>> text_indentation("                                                       ")
<BLANKLINE>
